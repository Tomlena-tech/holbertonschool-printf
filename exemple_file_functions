#include "main.h"
#include <stdarg.h>
#include <unistd.h>

/**
 * print_char - Affiche un caractère (specifier %c)
 * @args: liste d'arguments (va_list)
 * Return: 1 (nombre de caractères affichés)
 */
int print_char(va_list args)
{
	char c = va_arg(args, int);  // Récupère l'argument comme un int (char promu)
	return (_putchar(c));        // Affiche le caractère et retourne 1
}

/**
 * print_string - Affiche une chaîne de caractères (specifier %s)
 * @args: liste d'arguments (va_list)
 * Return: nombre de caractères affichés
 */
int print_string(va_list args)
{
	char *str = va_arg(args, char *);
	int i = 0;

	if (str == NULL)
		str = "(null)";  // Affiche (null) si la chaîne est NULL

	while (str[i])
	{
		_putchar(str[i]);
		i++;
	}

	return (i);  // Retourne le nombre de caractères affichés
}

/**
 * print_percent - Affiche un pourcentage littéral (specifier %%)
 * @args: liste d'arguments (non utilisée ici)
 * Return: 1 (car 1 caractère est affiché)
 */
int print_percent(va_list args)
{
	(void)args;           // Argument inutilisé
	return (_putchar('%'));
}

/**
 * print_int - Affiche un entier signé (specifier %d ou %i)
 * @args: liste d'arguments (va_list)
 * Return: nombre de caractères affichés
 */
int print_int(va_list args)
{
	int n = va_arg(args, int);
	int count = 0;
	unsigned int num;

	if (n < 0)
	{
		count += _putchar('-');  // Affiche le signe négatif
		num = -n;
	}
	else
	{
		num = n;
	}

	// Appelle une fonction récursive pour afficher les chiffres un par un
	count += print_number(num);

	return (count);
}

/**
 * print_number - Fonction d'affichage récursif des chiffres d'un entier positif
 * @n: nombre entier positif
 * Return: nombre de caractères affichés
 */
int print_number(unsigned int n)
{
	int count = 0;

	if (n / 10)
		count += print_number(n / 10);

	count += _putchar((n % 10) + '0');

	return (count);
}